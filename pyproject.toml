[tool.poetry]
name = "apartment-scraper"
version = "0.1.0"
description = "\"Tool for evaluating apartments using APIs from Austrian Immobilien search engines.\""
authors = ["Robert Nystr√∂m <robert.nystrom@toolsense.io>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "apartment_scraper" }]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "~0.100"
requests = "~2.31"
SQLAlchemy = "~2.0"
uvicorn = "~0.23"
httpx = { extras = ["http2"], version = "^0.25.0" }
loguru = "^0.7.2"

[tool.poetry.group.ci.dependencies]
ruff = "^0.0.290"
mypy = "^1.4.1"
black = "^23.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]

# Checks to add: ANN (Type annotation), B (Bug-bear), INP (Missing __init__)
select = [
    "ANN", # flake8-annotations
    "E",   # pycodestyle
    "F",   # PyFlakes
    "W",   # pycodestyle
    "I",   # isort
    "D",   # pydocstyle
    "PL",  # Pylint
    "C90", # mccabe
    "UP",  # pyupgrade
    "S",   # flake8-bandit
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "PTH", # flake8-use-pathlib
    "C4",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G",   # flake8-logging-format
    "TCH", # flake8-type-checking
    "RUF", # Ruff-specific rules
    "DJ",  # flake8-django
    "A",   # flake8-builtins
    "TRY", # tryceratops
    "DTZ", # flake8-datetimez
    "N",   # pep8-naming
    "PT",  # flake8-pytest-style
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "INP", # flake8-no-pep420
]

ignore = ["D104", "D100", "D203", "D213", "S101", "RET505"]

# Extend with RUF100, to check for unused noqa.
extend-select = ["RUF100"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
    "performance_tests",
    "scripts",
    # "test_*",
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py311"

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.ruff.isort]
lines-after-imports = 2
